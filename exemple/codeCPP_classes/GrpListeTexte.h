#ifndef GRPLISTETEXTE__H
#define GRPLISTETEXTE__H

/////////////////////////////////////////////////
// Headers
/////////////////////////////////////////////////
#include "Action.h"
#include "Gadget.h"


/////////////////////////////////////////////////
/// \brief 
///
/////////////////////////////////////////////////
class GrpListeTexte : public Action, public Gadget {
    
    /////////////////////////////////////////////////
    // Les methodes
    /////////////////////////////////////////////////
    
public:
    /////////////////////////////////////////////////
    /// \brief  
    ///
    /// \param parent		 
    /////////////////////////////////////////////////
GrpListeTexte (ptr parent);

virtual virtual void ajouter (string element);

    /////////////////////////////////////////////////
    /// \brief  
    ///
    /// \param element		 
    /////////////////////////////////////////////////
virtual void supprimer (string element);

void lier (string key, funcType fonction);

void lier (unsigned int id, funcType fonction);

void delier (string key);

    /////////////////////////////////////////////////
    /// \brief  
    ///
    /// \param id		 
    /////////////////////////////////////////////////
void delier (unsigned int id);

virtual void actualiser ();

virtual void traiter_evenements (const sf::Event& evenement);

private:
virtual void init ();

virtual void init_skin ();

    /////////////////////////////////////////////////
    /// \brief  
    ///
    /////////////////////////////////////////////////
virtual void init_interactions ();

    /////////////////////////////////////////////////
    /// \brief  
    ///
    /////////////////////////////////////////////////
virtual void actualiser_bounds ();

    
    /////////////////////////////////////////////////
    // Les membres
    /////////////////////////////////////////////////
    
public:
    map < texte, ptr > m_element;    
private:
    sf::Vector2i m_contenuPosition;    ///<       
    shared_ptr<Groupe> m_contenuGroupe;    ///<  (pas rendu directement, mais dessinÃ© dans la texture de m_contenuImage )    
    shared_prt<Image> m_contenuImage;    
    shared_ptr<BoutonGlissere> m_btnGliss_V;    
    shared_ptr<BoutonGlissere> m_btnGliss_H;    ///<       
};

#endif


////////////////////////////////////////////////////////////
/// class GrpListeTexte
/// ingroup 
///
/// see 
///
////////////////////////////////////////////////////////////
